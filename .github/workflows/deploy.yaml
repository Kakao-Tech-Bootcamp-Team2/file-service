name: Deploy
on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: kakao-tech-bootcamp-team2/file-service
  VERSION: latest

jobs:
  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Build container image
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} .
      - name: OCI image vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          fail-build: false
          severity-cutoff: high
      - name: Log into container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish container image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

  deploy:
    name: Deploy to EC2
    needs: [ package ]
    runs-on: ubuntu-24.04
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.FILE_SERVICE_HOST }}
          username: ubuntu
          key_format: PEM
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/file-service && \
            echo "${{ secrets.GITHUB_TOKEN }}" | sudo docker login ghcr.io -u ${{ github.actor }} --password-stdin && \
            git pull origin main && \
            sudo docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} && \
            sudo docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} file-service:latest && \
            sudo docker rm -f file-service || true && \
            sudo docker run -d --name file-service \
              -p 3002:3002 \
              --env-file .env \
              -v $(pwd)/logs:/usr/src/app/logs \
              -v $(pwd)/uploads:/usr/src/app/uploads \
              --cpus=1.5 \
              --memory=1664m \
              --memory-reservation=1024m \
              --restart unless-stopped \
              --network shared-infrastructure \
              file-service:latest